[01/12 08:58:12 d2.engine.defaults]: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
test in utils nums_data 1231
[01/12 08:58:12 d2.data.build]: Removed 0 images with no usable annotations. 1231 images left.
[01/12 08:58:12 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[01/12 08:58:12 d2.data.build]: Using training sampler TrainingSampler
[01/12 08:58:12 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[01/12 08:58:12 d2.data.common]: Serializing 1231 elements to byte tensors and concatenating them all ...
[01/12 08:58:12 d2.data.common]: Serialized dataset takes 1.41 MiB
WARNING [01/12 08:58:12 d2.solver.build]: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[01/12 08:58:12 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from detectron2://COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl ...
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.cls_score.weight' to the model due to incompatible shapes: (81, 1024) in the checkpoint but (2, 1024) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.cls_score.bias' to the model due to incompatible shapes: (81,) in the checkpoint but (2,) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.bbox_pred.weight' to the model due to incompatible shapes: (320, 1024) in the checkpoint but (4, 1024) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.bbox_pred.bias' to the model due to incompatible shapes: (320,) in the checkpoint but (4,) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.mask_head.predictor.weight' to the model due to incompatible shapes: (80, 256, 1, 1) in the checkpoint but (1, 256, 1, 1) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.mask_head.predictor.bias' to the model due to incompatible shapes: (80,) in the checkpoint but (1,) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Some model parameters or buffers are not found in the checkpoint:
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
roi_heads.mask_head.predictor.{bias, weight}
[01/12 08:58:12 d2.engine.train_loop]: Starting training from iteration 0
[01/12 08:58:38 d2.utils.events]:  eta: 0:59:15  iter: 19  total_loss: 1.74  loss_cls: 0.5799  loss_box_reg: 0.2582  loss_mask: 0.6894  loss_rpn_cls: 0.1339  loss_rpn_loc: 0.03331  time: 1.2619  data_time: 0.8165  lr: 4.9953e-06  max_mem: 2945M
[01/12 08:59:02 d2.utils.events]:  eta: 0:57:50  iter: 39  total_loss: 1.666  loss_cls: 0.4899  loss_box_reg: 0.3429  loss_mask: 0.6623  loss_rpn_cls: 0.07362  loss_rpn_loc: 0.02508  time: 1.2101  data_time: 0.6600  lr: 9.9902e-06  max_mem: 2945M
[01/12 08:59:26 d2.utils.events]:  eta: 0:58:27  iter: 59  total_loss: 1.395  loss_cls: 0.4145  loss_box_reg: 0.3159  loss_mask: 0.6027  loss_rpn_cls: 0.05505  loss_rpn_loc: 0.01565  time: 1.2160  data_time: 0.7438  lr: 1.4985e-05  max_mem: 2945M
[01/12 08:59:52 d2.utils.events]:  eta: 0:58:15  iter: 79  total_loss: 1.444  loss_cls: 0.3079  loss_box_reg: 0.2566  loss_mask: 0.5233  loss_rpn_cls: 0.1116  loss_rpn_loc: 0.03475  time: 1.2341  data_time: 0.7746  lr: 1.998e-05  max_mem: 2945M
[01/12 09:00:15 d2.utils.events]:  eta: 0:57:44  iter: 99  total_loss: 1.191  loss_cls: 0.2681  loss_box_reg: 0.2443  loss_mask: 0.425  loss_rpn_cls: 0.02501  loss_rpn_loc: 0.02011  time: 1.2126  data_time: 0.6365  lr: 2.4975e-05  max_mem: 2945M
[01/12 09:00:39 d2.utils.events]:  eta: 0:57:20  iter: 119  total_loss: 1.053  loss_cls: 0.2795  loss_box_reg: 0.3008  loss_mask: 0.3282  loss_rpn_cls: 0.05372  loss_rpn_loc: 0.01453  time: 1.2125  data_time: 0.7429  lr: 2.997e-05  max_mem: 2945M
[01/12 09:01:03 d2.utils.events]:  eta: 0:56:52  iter: 139  total_loss: 0.9424  loss_cls: 0.2336  loss_box_reg: 0.2284  loss_mask: 0.2186  loss_rpn_cls: 0.06831  loss_rpn_loc: 0.01877  time: 1.2096  data_time: 0.7075  lr: 3.4965e-05  max_mem: 2945M
[01/12 09:01:26 d2.utils.events]:  eta: 0:56:27  iter: 159  total_loss: 0.9374  loss_cls: 0.2365  loss_box_reg: 0.2832  loss_mask: 0.146  loss_rpn_cls: 0.03263  loss_rpn_loc: 0.01979  time: 1.2054  data_time: 0.6753  lr: 3.996e-05  max_mem: 2945M
[01/12 09:01:48 d2.utils.events]:  eta: 0:55:25  iter: 179  total_loss: 0.9484  loss_cls: 0.2257  loss_box_reg: 0.2583  loss_mask: 0.087  loss_rpn_cls: 0.02842  loss_rpn_loc: 0.01855  time: 1.1946  data_time: 0.6092  lr: 4.4955e-05  max_mem: 2945M
[01/12 09:02:09 d2.utils.events]:  eta: 0:54:14  iter: 199  total_loss: 0.6734  loss_cls: 0.1854  loss_box_reg: 0.2046  loss_mask: 0.06632  loss_rpn_cls: 0.0651  loss_rpn_loc: 0.03296  time: 1.1779  data_time: 0.5270  lr: 4.995e-05  max_mem: 2945M
[01/12 09:02:28 d2.utils.events]:  eta: 0:53:20  iter: 219  total_loss: 0.5947  loss_cls: 0.1852  loss_box_reg: 0.2242  loss_mask: 0.0446  loss_rpn_cls: 0.02881  loss_rpn_loc: 0.02262  time: 1.1586  data_time: 0.4719  lr: 5.4945e-05  max_mem: 2945M
[01/12 09:02:52 d2.utils.events]:  eta: 0:52:57  iter: 239  total_loss: 0.5573  loss_cls: 0.1656  loss_box_reg: 0.2193  loss_mask: 0.03187  loss_rpn_cls: 0.03522  loss_rpn_loc: 0.01888  time: 1.1583  data_time: 0.6628  lr: 5.994e-05  max_mem: 2945M
[01/12 09:03:14 d2.utils.events]:  eta: 0:52:26  iter: 259  total_loss: 0.4971  loss_cls: 0.1266  loss_box_reg: 0.1315  loss_mask: 0.02538  loss_rpn_cls: 0.05918  loss_rpn_loc: 0.05232  time: 1.1558  data_time: 0.6321  lr: 6.4935e-05  max_mem: 2945M
[01/12 09:03:37 d2.utils.events]:  eta: 0:52:03  iter: 279  total_loss: 0.408  loss_cls: 0.1291  loss_box_reg: 0.1409  loss_mask: 0.01863  loss_rpn_cls: 0.05036  loss_rpn_loc: 0.03003  time: 1.1565  data_time: 0.6627  lr: 6.993e-05  max_mem: 2945M
[01/12 09:04:02 d2.utils.events]:  eta: 0:52:30  iter: 299  total_loss: 0.4469  loss_cls: 0.1368  loss_box_reg: 0.2018  loss_mask: 0.02034  loss_rpn_cls: 0.04623  loss_rpn_loc: 0.02357  time: 1.1611  data_time: 0.7528  lr: 7.4925e-05  max_mem: 2945M
[01/12 09:04:26 d2.utils.events]:  eta: 0:52:12  iter: 319  total_loss: 0.4393  loss_cls: 0.1376  loss_box_reg: 0.2158  loss_mask: 0.01315  loss_rpn_cls: 0.03104  loss_rpn_loc: 0.03258  time: 1.1629  data_time: 0.6868  lr: 7.992e-05  max_mem: 2945M
[01/12 09:04:47 d2.utils.events]:  eta: 0:51:44  iter: 339  total_loss: 0.4362  loss_cls: 0.1168  loss_box_reg: 0.1539  loss_mask: 0.01053  loss_rpn_cls: 0.0395  loss_rpn_loc: 0.04049  time: 1.1581  data_time: 0.5995  lr: 8.4915e-05  max_mem: 2945M
[01/12 09:05:14 d2.utils.events]:  eta: 0:51:53  iter: 359  total_loss: 0.3017  loss_cls: 0.07912  loss_box_reg: 0.1065  loss_mask: 0.01013  loss_rpn_cls: 0.0644  loss_rpn_loc: 0.02492  time: 1.1665  data_time: 0.7993  lr: 8.991e-05  max_mem: 2945M
[01/12 09:05:35 d2.utils.events]:  eta: 0:51:20  iter: 379  total_loss: 0.5088  loss_cls: 0.1541  loss_box_reg: 0.2161  loss_mask: 0.009273  loss_rpn_cls: 0.03675  loss_rpn_loc: 0.02563  time: 1.1623  data_time: 0.5931  lr: 9.4905e-05  max_mem: 2945M
[01/12 09:05:58 d2.utils.events]:  eta: 0:50:43  iter: 399  total_loss: 0.4255  loss_cls: 0.126  loss_box_reg: 0.1708  loss_mask: 0.01005  loss_rpn_cls: 0.02864  loss_rpn_loc: 0.02817  time: 1.1596  data_time: 0.6083  lr: 9.99e-05  max_mem: 2945M
[01/12 09:06:18 d2.utils.events]:  eta: 0:49:39  iter: 419  total_loss: 0.5202  loss_cls: 0.1613  loss_box_reg: 0.2401  loss_mask: 0.00921  loss_rpn_cls: 0.02658  loss_rpn_loc: 0.02291  time: 1.1521  data_time: 0.4862  lr: 0.0001049  max_mem: 2945M
[01/12 09:06:41 d2.utils.events]:  eta: 0:49:24  iter: 439  total_loss: 0.5167  loss_cls: 0.147  loss_box_reg: 0.268  loss_mask: 0.008792  loss_rpn_cls: 0.03253  loss_rpn_loc: 0.02226  time: 1.1516  data_time: 0.6577  lr: 0.00010989  max_mem: 2945M
[01/12 09:07:04 d2.utils.events]:  eta: 0:49:25  iter: 459  total_loss: 0.427  loss_cls: 0.1441  loss_box_reg: 0.1626  loss_mask: 0.01011  loss_rpn_cls: 0.04359  loss_rpn_loc: 0.02221  time: 1.1525  data_time: 0.6712  lr: 0.00011489  max_mem: 2945M
[01/12 09:07:27 d2.utils.events]:  eta: 0:49:01  iter: 479  total_loss: 0.4431  loss_cls: 0.1495  loss_box_reg: 0.2168  loss_mask: 0.007395  loss_rpn_cls: 0.03604  loss_rpn_loc: 0.01686  time: 1.1528  data_time: 0.6566  lr: 0.00011988  max_mem: 2945M
[01/12 09:07:47 d2.utils.events]:  eta: 0:48:25  iter: 499  total_loss: 0.4904  loss_cls: 0.1403  loss_box_reg: 0.238  loss_mask: 0.008699  loss_rpn_cls: 0.03527  loss_rpn_loc: 0.0128  time: 1.1472  data_time: 0.5073  lr: 0.00012488  max_mem: 2945M
[01/12 09:08:11 d2.utils.events]:  eta: 0:48:10  iter: 519  total_loss: 0.4819  loss_cls: 0.1337  loss_box_reg: 0.228  loss_mask: 0.009362  loss_rpn_cls: 0.03163  loss_rpn_loc: 0.01365  time: 1.1478  data_time: 0.6864  lr: 0.00012987  max_mem: 2945M
[01/12 09:08:35 d2.utils.events]:  eta: 0:47:48  iter: 539  total_loss: 0.475  loss_cls: 0.1319  loss_box_reg: 0.1883  loss_mask: 0.006365  loss_rpn_cls: 0.04059  loss_rpn_loc: 0.02781  time: 1.1501  data_time: 0.7092  lr: 0.00013487  max_mem: 2945M
[01/12 09:08:57 d2.utils.events]:  eta: 0:47:17  iter: 559  total_loss: 0.4823  loss_cls: 0.1369  loss_box_reg: 0.2136  loss_mask: 0.008066  loss_rpn_cls: 0.03623  loss_rpn_loc: 0.03333  time: 1.1491  data_time: 0.6138  lr: 0.00013986  max_mem: 2945M
[01/12 09:09:18 d2.utils.events]:  eta: 0:46:19  iter: 579  total_loss: 0.4699  loss_cls: 0.1291  loss_box_reg: 0.2411  loss_mask: 0.009186  loss_rpn_cls: 0.03913  loss_rpn_loc: 0.01324  time: 1.1451  data_time: 0.5191  lr: 0.00014486  max_mem: 2945M
[01/12 09:09:41 d2.utils.events]:  eta: 0:45:52  iter: 599  total_loss: 0.4059  loss_cls: 0.1404  loss_box_reg: 0.1844  loss_mask: 0.006469  loss_rpn_cls: 0.0264  loss_rpn_loc: 0.02511  time: 1.1443  data_time: 0.6200  lr: 0.00014985  max_mem: 2945M
[01/12 09:10:06 d2.utils.events]:  eta: 0:45:40  iter: 619  total_loss: 0.4758  loss_cls: 0.1504  loss_box_reg: 0.2507  loss_mask: 0.005839  loss_rpn_cls: 0.02919  loss_rpn_loc: 0.01505  time: 1.1481  data_time: 0.7491  lr: 0.00015485  max_mem: 2945M
[01/12 09:10:24 d2.utils.events]:  eta: 0:45:01  iter: 639  total_loss: 0.4103  loss_cls: 0.1284  loss_box_reg: 0.177  loss_mask: 0.007777  loss_rpn_cls: 0.03177  loss_rpn_loc: 0.01312  time: 1.1402  data_time: 0.3799  lr: 0.00015984  max_mem: 2945M
[01/12 09:10:42 d2.utils.events]:  eta: 0:44:26  iter: 659  total_loss: 0.5117  loss_cls: 0.1459  loss_box_reg: 0.2012  loss_mask: 0.006246  loss_rpn_cls: 0.03182  loss_rpn_loc: 0.02447  time: 1.1328  data_time: 0.3780  lr: 0.00016484  max_mem: 2945M
[01/12 09:11:01 d2.utils.events]:  eta: 0:43:44  iter: 679  total_loss: 0.5368  loss_cls: 0.1605  loss_box_reg: 0.2907  loss_mask: 0.007867  loss_rpn_cls: 0.02041  loss_rpn_loc: 0.02341  time: 1.1280  data_time: 0.4585  lr: 0.00016983  max_mem: 2945M
[01/12 09:11:20 d2.utils.events]:  eta: 0:42:44  iter: 699  total_loss: 0.4873  loss_cls: 0.1553  loss_box_reg: 0.215  loss_mask: 0.006489  loss_rpn_cls: 0.02678  loss_rpn_loc: 0.03141  time: 1.1220  data_time: 0.4064  lr: 0.00017483  max_mem: 2945M
[01/12 09:11:39 d2.utils.events]:  eta: 0:42:02  iter: 719  total_loss: 0.579  loss_cls: 0.169  loss_box_reg: 0.2936  loss_mask: 0.004926  loss_rpn_cls: 0.02579  loss_rpn_loc: 0.02009  time: 1.1185  data_time: 0.4755  lr: 0.00017982  max_mem: 2945M
[01/12 09:11:58 d2.utils.events]:  eta: 0:41:25  iter: 739  total_loss: 0.5122  loss_cls: 0.1513  loss_box_reg: 0.216  loss_mask: 0.007221  loss_rpn_cls: 0.03084  loss_rpn_loc: 0.02986  time: 1.1131  data_time: 0.3925  lr: 0.00018482  max_mem: 2945M
[01/12 09:12:16 d2.utils.events]:  eta: 0:40:50  iter: 759  total_loss: 0.5357  loss_cls: 0.152  loss_box_reg: 0.2661  loss_mask: 0.004943  loss_rpn_cls: 0.027  loss_rpn_loc: 0.01345  time: 1.1079  data_time: 0.3768  lr: 0.00018981  max_mem: 2945M
[01/12 09:12:34 d2.utils.events]:  eta: 0:40:02  iter: 779  total_loss: 0.5292  loss_cls: 0.1455  loss_box_reg: 0.2796  loss_mask: 0.007229  loss_rpn_cls: 0.03593  loss_rpn_loc: 0.01257  time: 1.1024  data_time: 0.3780  lr: 0.00019481  max_mem: 2945M
[01/12 09:12:53 d2.utils.events]:  eta: 0:39:24  iter: 799  total_loss: 0.4582  loss_cls: 0.1466  loss_box_reg: 0.1946  loss_mask: 0.004226  loss_rpn_cls: 0.03708  loss_rpn_loc: 0.02313  time: 1.0986  data_time: 0.4359  lr: 0.0001998  max_mem: 2945M
[01/12 09:13:12 d2.utils.events]:  eta: 0:38:43  iter: 819  total_loss: 0.5277  loss_cls: 0.1509  loss_box_reg: 0.2822  loss_mask: 0.006057  loss_rpn_cls: 0.03269  loss_rpn_loc: 0.02186  time: 1.0943  data_time: 0.4174  lr: 0.0002048  max_mem: 2945M
[01/12 09:13:31 d2.utils.events]:  eta: 0:38:16  iter: 839  total_loss: 0.5516  loss_cls: 0.1457  loss_box_reg: 0.2822  loss_mask: 0.007688  loss_rpn_cls: 0.02717  loss_rpn_loc: 0.02343  time: 1.0912  data_time: 0.4820  lr: 0.00020979  max_mem: 2945M
[01/12 09:13:51 d2.utils.events]:  eta: 0:37:52  iter: 859  total_loss: 0.5393  loss_cls: 0.1712  loss_box_reg: 0.2677  loss_mask: 0.007055  loss_rpn_cls: 0.03163  loss_rpn_loc: 0.01436  time: 1.0888  data_time: 0.4630  lr: 0.00021479  max_mem: 2945M
[01/12 09:14:10 d2.utils.events]:  eta: 0:37:27  iter: 879  total_loss: 0.5142  loss_cls: 0.1557  loss_box_reg: 0.2695  loss_mask: 0.007594  loss_rpn_cls: 0.03189  loss_rpn_loc: 0.02114  time: 1.0856  data_time: 0.4213  lr: 0.00021978  max_mem: 2945M
[01/12 09:14:28 d2.utils.events]:  eta: 0:36:55  iter: 899  total_loss: 0.4759  loss_cls: 0.1531  loss_box_reg: 0.2317  loss_mask: 0.007346  loss_rpn_cls: 0.04418  loss_rpn_loc: 0.01852  time: 1.0814  data_time: 0.3749  lr: 0.00022478  max_mem: 2945M
[01/12 09:14:44 d2.utils.events]:  eta: 0:36:02  iter: 919  total_loss: 0.4512  loss_cls: 0.1477  loss_box_reg: 0.2041  loss_mask: 0.007905  loss_rpn_cls: 0.02886  loss_rpn_loc: 0.01028  time: 1.0761  data_time: 0.3178  lr: 0.00022977  max_mem: 2945M
[01/12 09:15:05 d2.utils.events]:  eta: 0:35:38  iter: 939  total_loss: 0.475  loss_cls: 0.1754  loss_box_reg: 0.231  loss_mask: 0.00814  loss_rpn_cls: 0.03712  loss_rpn_loc: 0.03721  time: 1.0750  data_time: 0.4852  lr: 0.00023477  max_mem: 2945M
[01/12 09:15:27 d2.utils.events]:  eta: 0:35:15  iter: 959  total_loss: 0.5047  loss_cls: 0.1644  loss_box_reg: 0.2513  loss_mask: 0.004873  loss_rpn_cls: 0.02847  loss_rpn_loc: 0.01442  time: 1.0758  data_time: 0.5952  lr: 0.00023976  max_mem: 2945M
[01/12 09:15:47 d2.utils.events]:  eta: 0:34:52  iter: 979  total_loss: 0.5589  loss_cls: 0.1524  loss_box_reg: 0.2732  loss_mask: 0.004554  loss_rpn_cls: 0.03796  loss_rpn_loc: 0.01522  time: 1.0737  data_time: 0.4590  lr: 0.00024476  max_mem: 2945M
[01/12 09:16:06 d2.utils.events]:  eta: 0:34:27  iter: 999  total_loss: 0.4982  loss_cls: 0.1504  loss_box_reg: 0.2556  loss_mask: 0.00661  loss_rpn_cls: 0.02219  loss_rpn_loc: 0.01069  time: 1.0713  data_time: 0.4435  lr: 0.00024975  max_mem: 2945M
[01/12 09:16:24 d2.utils.events]:  eta: 0:34:01  iter: 1019  total_loss: 0.5473  loss_cls: 0.1598  loss_box_reg: 0.2392  loss_mask: 0.005208  loss_rpn_cls: 0.03079  loss_rpn_loc: 0.02269  time: 1.0684  data_time: 0.3953  lr: 0.00025  max_mem: 2945M
[01/12 09:16:43 d2.utils.events]:  eta: 0:33:32  iter: 1039  total_loss: 0.493  loss_cls: 0.1434  loss_box_reg: 0.2229  loss_mask: 0.004814  loss_rpn_cls: 0.05704  loss_rpn_loc: 0.01467  time: 1.0661  data_time: 0.4270  lr: 0.00025  max_mem: 2945M
[01/12 09:17:01 d2.utils.events]:  eta: 0:33:00  iter: 1059  total_loss: 0.5631  loss_cls: 0.1583  loss_box_reg: 0.2608  loss_mask: 0.008615  loss_rpn_cls: 0.03268  loss_rpn_loc: 0.02019  time: 1.0628  data_time: 0.3736  lr: 0.00025  max_mem: 2945M
[01/12 09:17:19 d2.utils.events]:  eta: 0:32:36  iter: 1079  total_loss: 0.5191  loss_cls: 0.1549  loss_box_reg: 0.2199  loss_mask: 0.007958  loss_rpn_cls: 0.02652  loss_rpn_loc: 0.01335  time: 1.0599  data_time: 0.3877  lr: 0.00025  max_mem: 2945M
[01/12 09:17:39 d2.utils.events]:  eta: 0:32:05  iter: 1099  total_loss: 0.5518  loss_cls: 0.1441  loss_box_reg: 0.2206  loss_mask: 0.005708  loss_rpn_cls: 0.04164  loss_rpn_loc: 0.07015  time: 1.0582  data_time: 0.4459  lr: 0.00025  max_mem: 2945M
[01/12 09:17:58 d2.utils.events]:  eta: 0:31:27  iter: 1119  total_loss: 0.5513  loss_cls: 0.161  loss_box_reg: 0.3103  loss_mask: 0.008586  loss_rpn_cls: 0.02989  loss_rpn_loc: 0.008787  time: 1.0563  data_time: 0.4204  lr: 0.00025  max_mem: 2945M
[01/12 09:18:17 d2.utils.events]:  eta: 0:31:00  iter: 1139  total_loss: 0.461  loss_cls: 0.1493  loss_box_reg: 0.2252  loss_mask: 0.00807  loss_rpn_cls: 0.02376  loss_rpn_loc: 0.01384  time: 1.0545  data_time: 0.4326  lr: 0.00025  max_mem: 2945M
[01/12 09:18:34 d2.utils.events]:  eta: 0:30:30  iter: 1159  total_loss: 0.5176  loss_cls: 0.1636  loss_box_reg: 0.2454  loss_mask: 0.007134  loss_rpn_cls: 0.02807  loss_rpn_loc: 0.03796  time: 1.0513  data_time: 0.3365  lr: 0.00025  max_mem: 2945M
[01/12 09:18:53 d2.utils.events]:  eta: 0:29:57  iter: 1179  total_loss: 0.4904  loss_cls: 0.1414  loss_box_reg: 0.2669  loss_mask: 0.005669  loss_rpn_cls: 0.03602  loss_rpn_loc: 0.008223  time: 1.0490  data_time: 0.3876  lr: 0.00025  max_mem: 2945M
[01/12 09:19:11 d2.utils.events]:  eta: 0:29:34  iter: 1199  total_loss: 0.5008  loss_cls: 0.1547  loss_box_reg: 0.2303  loss_mask: 0.006666  loss_rpn_cls: 0.0441  loss_rpn_loc: 0.01128  time: 1.0471  data_time: 0.4166  lr: 0.00025  max_mem: 2945M
[01/12 09:19:31 d2.utils.events]:  eta: 0:29:09  iter: 1219  total_loss: 0.4793  loss_cls: 0.1434  loss_box_reg: 0.2357  loss_mask: 0.006159  loss_rpn_cls: 0.02518  loss_rpn_loc: 0.02939  time: 1.0459  data_time: 0.4395  lr: 0.00025  max_mem: 2945M
[01/12 09:19:48 d2.utils.events]:  eta: 0:28:43  iter: 1239  total_loss: 0.5194  loss_cls: 0.1575  loss_box_reg: 0.2139  loss_mask: 0.00686  loss_rpn_cls: 0.02909  loss_rpn_loc: 0.03438  time: 1.0433  data_time: 0.3725  lr: 0.00025  max_mem: 2945M
[01/12 09:20:07 d2.utils.events]:  eta: 0:28:13  iter: 1259  total_loss: 0.4446  loss_cls: 0.1414  loss_box_reg: 0.2232  loss_mask: 0.007035  loss_rpn_cls: 0.0329  loss_rpn_loc: 0.01555  time: 1.0411  data_time: 0.3888  lr: 0.00025  max_mem: 2945M
[01/12 09:20:30 d2.utils.events]:  eta: 0:27:52  iter: 1279  total_loss: 0.5622  loss_cls: 0.1777  loss_box_reg: 0.2647  loss_mask: 0.007424  loss_rpn_cls: 0.02215  loss_rpn_loc: 0.01083  time: 1.0430  data_time: 0.6272  lr: 0.00025  max_mem: 2945M
[01/12 09:20:48 d2.utils.events]:  eta: 0:27:18  iter: 1299  total_loss: 0.4727  loss_cls: 0.1456  loss_box_reg: 0.2429  loss_mask: 0.006405  loss_rpn_cls: 0.03727  loss_rpn_loc: 0.01903  time: 1.0412  data_time: 0.4006  lr: 0.00025  max_mem: 2945M
[01/12 09:21:08 d2.utils.events]:  eta: 0:26:53  iter: 1319  total_loss: 0.4632  loss_cls: 0.1553  loss_box_reg: 0.2406  loss_mask: 0.006426  loss_rpn_cls: 0.03269  loss_rpn_loc: 0.05148  time: 1.0402  data_time: 0.4403  lr: 0.00025  max_mem: 2945M
[01/12 09:21:26 d2.utils.events]:  eta: 0:26:27  iter: 1339  total_loss: 0.5882  loss_cls: 0.1692  loss_box_reg: 0.2838  loss_mask: 0.006051  loss_rpn_cls: 0.02506  loss_rpn_loc: 0.03504  time: 1.0382  data_time: 0.3816  lr: 0.00025  max_mem: 2945M
[01/12 09:21:45 d2.utils.events]:  eta: 0:25:57  iter: 1359  total_loss: 0.5322  loss_cls: 0.1389  loss_box_reg: 0.2767  loss_mask: 0.006816  loss_rpn_cls: 0.02934  loss_rpn_loc: 0.02287  time: 1.0366  data_time: 0.3922  lr: 0.00025  max_mem: 2945M
[01/12 09:22:03 d2.utils.events]:  eta: 0:25:36  iter: 1379  total_loss: 0.4768  loss_cls: 0.1309  loss_box_reg: 0.2647  loss_mask: 0.005652  loss_rpn_cls: 0.03101  loss_rpn_loc: 0.01683  time: 1.0350  data_time: 0.3834  lr: 0.00025  max_mem: 2945M
[01/12 09:22:22 d2.utils.events]:  eta: 0:25:11  iter: 1399  total_loss: 0.5562  loss_cls: 0.1643  loss_box_reg: 0.3115  loss_mask: 0.006555  loss_rpn_cls: 0.02323  loss_rpn_loc: 0.02995  time: 1.0333  data_time: 0.3948  lr: 0.00025  max_mem: 2945M
[01/12 09:22:40 d2.utils.events]:  eta: 0:24:54  iter: 1419  total_loss: 0.5647  loss_cls: 0.1605  loss_box_reg: 0.3031  loss_mask: 0.005758  loss_rpn_cls: 0.02785  loss_rpn_loc: 0.01583  time: 1.0320  data_time: 0.4329  lr: 0.00025  max_mem: 2945M
[01/12 09:22:59 d2.utils.events]:  eta: 0:24:29  iter: 1439  total_loss: 0.4427  loss_cls: 0.1292  loss_box_reg: 0.2525  loss_mask: 0.006881  loss_rpn_cls: 0.03536  loss_rpn_loc: 0.01088  time: 1.0304  data_time: 0.3877  lr: 0.00025  max_mem: 2945M
[01/12 09:23:18 d2.utils.events]:  eta: 0:24:02  iter: 1459  total_loss: 0.5691  loss_cls: 0.1739  loss_box_reg: 0.322  loss_mask: 0.005352  loss_rpn_cls: 0.02055  loss_rpn_loc: 0.01094  time: 1.0294  data_time: 0.4172  lr: 0.00025  max_mem: 2945M
[01/12 09:23:36 d2.utils.events]:  eta: 0:23:39  iter: 1479  total_loss: 0.5556  loss_cls: 0.1837  loss_box_reg: 0.2623  loss_mask: 0.007106  loss_rpn_cls: 0.02902  loss_rpn_loc: 0.02391  time: 1.0279  data_time: 0.3878  lr: 0.00025  max_mem: 2945M
[01/12 09:23:55 d2.utils.events]:  eta: 0:23:20  iter: 1499  total_loss: 0.5391  loss_cls: 0.1605  loss_box_reg: 0.2548  loss_mask: 0.005765  loss_rpn_cls: 0.02663  loss_rpn_loc: 0.01401  time: 1.0267  data_time: 0.4153  lr: 0.00025  max_mem: 2945M
[01/12 09:24:14 d2.utils.events]:  eta: 0:23:00  iter: 1519  total_loss: 0.4855  loss_cls: 0.1636  loss_box_reg: 0.2256  loss_mask: 0.006585  loss_rpn_cls: 0.02867  loss_rpn_loc: 0.03882  time: 1.0254  data_time: 0.4038  lr: 0.00025  max_mem: 2945M
[01/12 09:24:33 d2.utils.events]:  eta: 0:22:34  iter: 1539  total_loss: 0.5611  loss_cls: 0.181  loss_box_reg: 0.265  loss_mask: 0.01178  loss_rpn_cls: 0.028  loss_rpn_loc: 0.03377  time: 1.0246  data_time: 0.4589  lr: 0.00025  max_mem: 2945M
[01/12 09:24:51 d2.utils.events]:  eta: 0:22:12  iter: 1559  total_loss: 0.532  loss_cls: 0.1657  loss_box_reg: 0.2396  loss_mask: 0.006746  loss_rpn_cls: 0.0271  loss_rpn_loc: 0.02111  time: 1.0229  data_time: 0.3718  lr: 0.00025  max_mem: 2945M
[01/12 09:25:10 d2.utils.events]:  eta: 0:21:49  iter: 1579  total_loss: 0.4312  loss_cls: 0.159  loss_box_reg: 0.2212  loss_mask: 0.008093  loss_rpn_cls: 0.023  loss_rpn_loc: 0.01644  time: 1.0220  data_time: 0.4322  lr: 0.00025  max_mem: 2945M
[01/12 09:25:34 d2.utils.events]:  eta: 0:21:30  iter: 1599  total_loss: 0.5841  loss_cls: 0.1789  loss_box_reg: 0.2864  loss_mask: 0.008012  loss_rpn_cls: 0.02437  loss_rpn_loc: 0.01637  time: 1.0239  data_time: 0.6399  lr: 0.00025  max_mem: 2945M
[01/12 09:25:53 d2.utils.events]:  eta: 0:21:08  iter: 1619  total_loss: 0.5498  loss_cls: 0.1662  loss_box_reg: 0.2815  loss_mask: 0.006005  loss_rpn_cls: 0.02377  loss_rpn_loc: 0.01866  time: 1.0230  data_time: 0.4309  lr: 0.00025  max_mem: 2945M
[01/12 09:26:13 d2.utils.events]:  eta: 0:20:54  iter: 1639  total_loss: 0.5345  loss_cls: 0.1757  loss_box_reg: 0.2793  loss_mask: 0.00959  loss_rpn_cls: 0.03201  loss_rpn_loc: 0.02267  time: 1.0227  data_time: 0.5001  lr: 0.00025  max_mem: 2945M
[01/12 09:26:31 d2.utils.events]:  eta: 0:20:35  iter: 1659  total_loss: 0.4993  loss_cls: 0.157  loss_box_reg: 0.2562  loss_mask: 0.006509  loss_rpn_cls: 0.02692  loss_rpn_loc: 0.01329  time: 1.0213  data_time: 0.3918  lr: 0.00025  max_mem: 2945M
[01/12 09:26:48 d2.utils.events]:  eta: 0:20:15  iter: 1679  total_loss: 0.5331  loss_cls: 0.1683  loss_box_reg: 0.3164  loss_mask: 0.008191  loss_rpn_cls: 0.02018  loss_rpn_loc: 0.009744  time: 1.0197  data_time: 0.3540  lr: 0.00025  max_mem: 2945M
[01/12 09:27:07 d2.utils.events]:  eta: 0:19:55  iter: 1699  total_loss: 0.601  loss_cls: 0.1505  loss_box_reg: 0.2273  loss_mask: 0.009555  loss_rpn_cls: 0.03424  loss_rpn_loc: 0.07772  time: 1.0184  data_time: 0.3945  lr: 0.00025  max_mem: 2945M
[01/12 09:27:24 d2.utils.events]:  eta: 0:19:34  iter: 1719  total_loss: 0.4831  loss_cls: 0.1372  loss_box_reg: 0.2085  loss_mask: 0.008048  loss_rpn_cls: 0.0561  loss_rpn_loc: 0.04735  time: 1.0169  data_time: 0.3669  lr: 0.00025  max_mem: 2945M
[01/12 09:27:43 d2.utils.events]:  eta: 0:19:17  iter: 1739  total_loss: 0.4798  loss_cls: 0.1454  loss_box_reg: 0.1862  loss_mask: 0.00567  loss_rpn_cls: 0.03898  loss_rpn_loc: 0.01785  time: 1.0160  data_time: 0.4225  lr: 0.00025  max_mem: 2945M
[01/12 09:28:01 d2.utils.events]:  eta: 0:18:57  iter: 1759  total_loss: 0.4435  loss_cls: 0.1371  loss_box_reg: 0.1986  loss_mask: 0.008164  loss_rpn_cls: 0.02851  loss_rpn_loc: 0.01415  time: 1.0147  data_time: 0.3706  lr: 0.00025  max_mem: 2945M
[01/12 09:28:20 d2.utils.events]:  eta: 0:18:41  iter: 1779  total_loss: 0.4664  loss_cls: 0.1456  loss_box_reg: 0.1951  loss_mask: 0.005945  loss_rpn_cls: 0.02798  loss_rpn_loc: 0.02901  time: 1.0138  data_time: 0.4072  lr: 0.00025  max_mem: 2945M
[01/12 09:28:39 d2.utils.events]:  eta: 0:18:25  iter: 1799  total_loss: 0.5166  loss_cls: 0.1498  loss_box_reg: 0.2648  loss_mask: 0.005862  loss_rpn_cls: 0.03156  loss_rpn_loc: 0.01395  time: 1.0133  data_time: 0.4297  lr: 0.00025  max_mem: 2945M
[01/12 09:28:56 d2.utils.events]:  eta: 0:18:05  iter: 1819  total_loss: 0.4852  loss_cls: 0.1522  loss_box_reg: 0.2447  loss_mask: 0.004745  loss_rpn_cls: 0.02301  loss_rpn_loc: 0.01007  time: 1.0114  data_time: 0.3245  lr: 0.00025  max_mem: 2945M
[01/12 09:29:15 d2.utils.events]:  eta: 0:17:47  iter: 1839  total_loss: 0.5656  loss_cls: 0.1818  loss_box_reg: 0.2452  loss_mask: 0.007666  loss_rpn_cls: 0.02706  loss_rpn_loc: 0.03908  time: 1.0107  data_time: 0.4272  lr: 0.00025  max_mem: 2945M
[01/12 09:29:34 d2.utils.events]:  eta: 0:17:25  iter: 1859  total_loss: 0.5192  loss_cls: 0.17  loss_box_reg: 0.266  loss_mask: 0.006357  loss_rpn_cls: 0.0256  loss_rpn_loc: 0.02318  time: 1.0097  data_time: 0.3878  lr: 0.00025  max_mem: 2945M
[01/12 09:29:51 d2.utils.events]:  eta: 0:17:05  iter: 1879  total_loss: 0.5139  loss_cls: 0.1593  loss_box_reg: 0.2471  loss_mask: 0.007927  loss_rpn_cls: 0.02418  loss_rpn_loc: 0.02031  time: 1.0083  data_time: 0.3395  lr: 0.00025  max_mem: 2945M
[01/12 09:30:10 d2.utils.events]:  eta: 0:16:50  iter: 1899  total_loss: 0.4709  loss_cls: 0.1454  loss_box_reg: 0.2064  loss_mask: 0.007323  loss_rpn_cls: 0.02709  loss_rpn_loc: 0.02001  time: 1.0077  data_time: 0.4346  lr: 0.00025  max_mem: 2945M
[01/12 09:30:34 d2.utils.events]:  eta: 0:16:35  iter: 1919  total_loss: 0.5651  loss_cls: 0.1733  loss_box_reg: 0.2885  loss_mask: 0.005761  loss_rpn_cls: 0.02573  loss_rpn_loc: 0.0306  time: 1.0095  data_time: 0.6117  lr: 0.00025  max_mem: 2945M
[01/12 09:30:53 d2.utils.events]:  eta: 0:16:16  iter: 1939  total_loss: 0.4866  loss_cls: 0.1505  loss_box_reg: 0.2239  loss_mask: 0.008818  loss_rpn_cls: 0.03205  loss_rpn_loc: 0.04628  time: 1.0087  data_time: 0.3986  lr: 0.00025  max_mem: 2945M
[01/12 09:31:12 d2.utils.events]:  eta: 0:15:57  iter: 1959  total_loss: 0.5205  loss_cls: 0.1685  loss_box_reg: 0.2483  loss_mask: 0.007929  loss_rpn_cls: 0.03414  loss_rpn_loc: 0.02335  time: 1.0081  data_time: 0.4270  lr: 0.00025  max_mem: 2945M
[01/12 09:31:31 d2.utils.events]:  eta: 0:15:39  iter: 1979  total_loss: 0.5171  loss_cls: 0.1656  loss_box_reg: 0.2312  loss_mask: 0.004643  loss_rpn_cls: 0.02235  loss_rpn_loc: 0.01419  time: 1.0076  data_time: 0.4369  lr: 0.00025  max_mem: 2945M
[01/12 09:31:49 d2.utils.events]:  eta: 0:15:19  iter: 1999  total_loss: 0.5513  loss_cls: 0.1774  loss_box_reg: 0.3197  loss_mask: 0.005109  loss_rpn_cls: 0.0255  loss_rpn_loc: 0.01097  time: 1.0068  data_time: 0.4001  lr: 0.00025  max_mem: 2945M
[01/12 09:32:07 d2.utils.events]:  eta: 0:14:59  iter: 2019  total_loss: 0.524  loss_cls: 0.1707  loss_box_reg: 0.3074  loss_mask: 0.005968  loss_rpn_cls: 0.02013  loss_rpn_loc: 0.01597  time: 1.0056  data_time: 0.3663  lr: 0.00025  max_mem: 2945M
[01/12 09:32:26 d2.utils.events]:  eta: 0:14:40  iter: 2039  total_loss: 0.5742  loss_cls: 0.167  loss_box_reg: 0.2935  loss_mask: 0.006963  loss_rpn_cls: 0.02116  loss_rpn_loc: 0.01376  time: 1.0050  data_time: 0.4336  lr: 0.00025  max_mem: 2945M
[01/12 09:32:44 d2.utils.events]:  eta: 0:14:22  iter: 2059  total_loss: 0.4843  loss_cls: 0.1373  loss_box_reg: 0.2074  loss_mask: 0.007729  loss_rpn_cls: 0.04469  loss_rpn_loc: 0.01786  time: 1.0042  data_time: 0.4006  lr: 0.00025  max_mem: 2945M
[01/12 09:33:03 d2.utils.events]:  eta: 0:14:04  iter: 2079  total_loss: 0.5008  loss_cls: 0.1495  loss_box_reg: 0.2399  loss_mask: 0.007414  loss_rpn_cls: 0.03383  loss_rpn_loc: 0.01448  time: 1.0035  data_time: 0.4298  lr: 0.00025  max_mem: 2945M
[01/12 09:33:21 d2.utils.events]:  eta: 0:13:45  iter: 2099  total_loss: 0.5325  loss_cls: 0.1787  loss_box_reg: 0.2715  loss_mask: 0.00785  loss_rpn_cls: 0.03533  loss_rpn_loc: 0.0297  time: 1.0024  data_time: 0.3631  lr: 0.00025  max_mem: 2945M
[01/12 09:33:39 d2.utils.events]:  eta: 0:13:27  iter: 2119  total_loss: 0.5262  loss_cls: 0.1667  loss_box_reg: 0.2722  loss_mask: 0.006619  loss_rpn_cls: 0.01977  loss_rpn_loc: 0.01569  time: 1.0013  data_time: 0.3860  lr: 0.00025  max_mem: 2945M
[01/12 09:33:56 d2.utils.events]:  eta: 0:13:06  iter: 2139  total_loss: 0.5791  loss_cls: 0.1928  loss_box_reg: 0.2794  loss_mask: 0.006773  loss_rpn_cls: 0.02617  loss_rpn_loc: 0.01951  time: 1.0001  data_time: 0.3552  lr: 0.00025  max_mem: 2945M
[01/12 09:34:15 d2.utils.events]:  eta: 0:12:48  iter: 2159  total_loss: 0.4651  loss_cls: 0.1509  loss_box_reg: 0.1804  loss_mask: 0.007643  loss_rpn_cls: 0.02479  loss_rpn_loc: 0.01556  time: 0.9994  data_time: 0.4043  lr: 0.00025  max_mem: 2945M
[01/12 09:34:32 d2.utils.events]:  eta: 0:12:24  iter: 2179  total_loss: 0.5561  loss_cls: 0.1705  loss_box_reg: 0.3112  loss_mask: 0.006007  loss_rpn_cls: 0.02677  loss_rpn_loc: 0.01096  time: 0.9982  data_time: 0.3345  lr: 0.00025  max_mem: 2945M
[01/12 09:34:50 d2.utils.events]:  eta: 0:12:06  iter: 2199  total_loss: 0.5774  loss_cls: 0.168  loss_box_reg: 0.3016  loss_mask: 0.0107  loss_rpn_cls: 0.02134  loss_rpn_loc: 0.01372  time: 0.9975  data_time: 0.3854  lr: 0.00025  max_mem: 2945M
[01/12 09:35:09 d2.utils.events]:  eta: 0:11:46  iter: 2219  total_loss: 0.6067  loss_cls: 0.1631  loss_box_reg: 0.2742  loss_mask: 0.006787  loss_rpn_cls: 0.03887  loss_rpn_loc: 0.03547  time: 0.9967  data_time: 0.3896  lr: 0.00025  max_mem: 2945M
[01/12 09:35:31 d2.utils.events]:  eta: 0:11:32  iter: 2239  total_loss: 0.5283  loss_cls: 0.1429  loss_box_reg: 0.2013  loss_mask: 0.004966  loss_rpn_cls: 0.04504  loss_rpn_loc: 0.03437  time: 0.9977  data_time: 0.5694  lr: 0.00025  max_mem: 2945M
[01/12 09:35:49 d2.utils.events]:  eta: 0:11:14  iter: 2259  total_loss: 0.5213  loss_cls: 0.1551  loss_box_reg: 0.2396  loss_mask: 0.007176  loss_rpn_cls: 0.03785  loss_rpn_loc: 0.02409  time: 0.9971  data_time: 0.4108  lr: 0.00025  max_mem: 2945M
[01/12 09:36:08 d2.utils.events]:  eta: 0:10:53  iter: 2279  total_loss: 0.4971  loss_cls: 0.1679  loss_box_reg: 0.2683  loss_mask: 0.00623  loss_rpn_cls: 0.02903  loss_rpn_loc: 0.008634  time: 0.9967  data_time: 0.4354  lr: 0.00025  max_mem: 2945M
[01/12 09:36:27 d2.utils.events]:  eta: 0:10:35  iter: 2299  total_loss: 0.5405  loss_cls: 0.1589  loss_box_reg: 0.2987  loss_mask: 0.006758  loss_rpn_cls: 0.02432  loss_rpn_loc: 0.01182  time: 0.9960  data_time: 0.3842  lr: 0.00025  max_mem: 2945M
[01/12 09:36:46 d2.utils.events]:  eta: 0:10:17  iter: 2319  total_loss: 0.5042  loss_cls: 0.1654  loss_box_reg: 0.2481  loss_mask: 0.008727  loss_rpn_cls: 0.03158  loss_rpn_loc: 0.04079  time: 0.9955  data_time: 0.4127  lr: 0.00025  max_mem: 2945M
[01/12 09:37:04 d2.utils.events]:  eta: 0:09:59  iter: 2339  total_loss: 0.5045  loss_cls: 0.1693  loss_box_reg: 0.25  loss_mask: 0.005702  loss_rpn_cls: 0.03182  loss_rpn_loc: 0.01983  time: 0.9946  data_time: 0.3907  lr: 0.00025  max_mem: 2945M
[01/12 09:37:21 d2.utils.events]:  eta: 0:09:41  iter: 2359  total_loss: 0.5281  loss_cls: 0.1601  loss_box_reg: 0.2801  loss_mask: 0.008369  loss_rpn_cls: 0.02389  loss_rpn_loc: 0.0147  time: 0.9938  data_time: 0.3955  lr: 0.00025  max_mem: 2945M
[01/12 09:37:41 d2.utils.events]:  eta: 0:09:25  iter: 2379  total_loss: 0.4976  loss_cls: 0.1526  loss_box_reg: 0.2477  loss_mask: 0.00567  loss_rpn_cls: 0.02277  loss_rpn_loc: 0.02132  time: 0.9937  data_time: 0.4741  lr: 0.00025  max_mem: 2945M
[01/12 09:37:59 d2.utils.events]:  eta: 0:09:07  iter: 2399  total_loss: 0.465  loss_cls: 0.1434  loss_box_reg: 0.2177  loss_mask: 0.01068  loss_rpn_cls: 0.04021  loss_rpn_loc: 0.05613  time: 0.9929  data_time: 0.3668  lr: 0.00025  max_mem: 2945M
[01/12 09:38:18 d2.utils.events]:  eta: 0:08:49  iter: 2419  total_loss: 0.4523  loss_cls: 0.1497  loss_box_reg: 0.2669  loss_mask: 0.005201  loss_rpn_cls: 0.02656  loss_rpn_loc: 0.01541  time: 0.9924  data_time: 0.4208  lr: 0.00025  max_mem: 2945M
[01/12 09:38:36 d2.utils.events]:  eta: 0:08:29  iter: 2439  total_loss: 0.5527  loss_cls: 0.1691  loss_box_reg: 0.2877  loss_mask: 0.006657  loss_rpn_cls: 0.02388  loss_rpn_loc: 0.01063  time: 0.9916  data_time: 0.3557  lr: 0.00025  max_mem: 2945M
[01/12 09:38:55 d2.utils.events]:  eta: 0:08:13  iter: 2459  total_loss: 0.5198  loss_cls: 0.1635  loss_box_reg: 0.2216  loss_mask: 0.007967  loss_rpn_cls: 0.02274  loss_rpn_loc: 0.02059  time: 0.9914  data_time: 0.4568  lr: 0.00025  max_mem: 2945M
[01/12 09:39:13 d2.utils.events]:  eta: 0:07:53  iter: 2479  total_loss: 0.5817  loss_cls: 0.1726  loss_box_reg: 0.3329  loss_mask: 0.006529  loss_rpn_cls: 0.03367  loss_rpn_loc: 0.01682  time: 0.9907  data_time: 0.4037  lr: 0.00025  max_mem: 2945M
[01/12 09:39:32 d2.utils.events]:  eta: 0:07:34  iter: 2499  total_loss: 0.4788  loss_cls: 0.1429  loss_box_reg: 0.2023  loss_mask: 0.006004  loss_rpn_cls: 0.04617  loss_rpn_loc: 0.04458  time: 0.9901  data_time: 0.4093  lr: 0.00025  max_mem: 2945M
[01/12 09:39:50 d2.utils.events]:  eta: 0:07:16  iter: 2519  total_loss: 0.5028  loss_cls: 0.1454  loss_box_reg: 0.2877  loss_mask: 0.005607  loss_rpn_cls: 0.02639  loss_rpn_loc: 0.006991  time: 0.9897  data_time: 0.4232  lr: 0.00025  max_mem: 2945M
[01/12 09:40:09 d2.utils.events]:  eta: 0:06:58  iter: 2539  total_loss: 0.4951  loss_cls: 0.159  loss_box_reg: 0.2295  loss_mask: 0.007399  loss_rpn_cls: 0.03182  loss_rpn_loc: 0.02541  time: 0.9892  data_time: 0.3938  lr: 0.00025  max_mem: 2945M
[01/12 09:40:30 d2.utils.events]:  eta: 0:06:41  iter: 2559  total_loss: 0.5285  loss_cls: 0.1538  loss_box_reg: 0.2745  loss_mask: 0.005624  loss_rpn_cls: 0.02453  loss_rpn_loc: 0.01391  time: 0.9897  data_time: 0.5082  lr: 0.00025  max_mem: 2945M
[01/12 09:40:49 d2.utils.events]:  eta: 0:06:22  iter: 2579  total_loss: 0.5692  loss_cls: 0.1774  loss_box_reg: 0.2535  loss_mask: 0.008867  loss_rpn_cls: 0.02907  loss_rpn_loc: 0.03875  time: 0.9892  data_time: 0.3883  lr: 0.00025  max_mem: 2945M
[01/12 09:41:08 d2.utils.events]:  eta: 0:06:03  iter: 2599  total_loss: 0.4868  loss_cls: 0.1528  loss_box_reg: 0.216  loss_mask: 0.01032  loss_rpn_cls: 0.03453  loss_rpn_loc: 0.01901  time: 0.9889  data_time: 0.4261  lr: 0.00025  max_mem: 2945M
[01/12 09:41:27 d2.utils.events]:  eta: 0:05:45  iter: 2619  total_loss: 0.5183  loss_cls: 0.165  loss_box_reg: 0.2561  loss_mask: 0.007225  loss_rpn_cls: 0.0274  loss_rpn_loc: 0.04144  time: 0.9886  data_time: 0.4459  lr: 0.00025  max_mem: 2945M
[01/12 09:41:45 d2.utils.events]:  eta: 0:05:26  iter: 2639  total_loss: 0.5193  loss_cls: 0.1531  loss_box_reg: 0.284  loss_mask: 0.005391  loss_rpn_cls: 0.03276  loss_rpn_loc: 0.01823  time: 0.9882  data_time: 0.4133  lr: 0.00025  max_mem: 2945M
[01/12 09:42:04 d2.utils.events]:  eta: 0:05:08  iter: 2659  total_loss: 0.4304  loss_cls: 0.1157  loss_box_reg: 0.1855  loss_mask: 0.0054  loss_rpn_cls: 0.04506  loss_rpn_loc: 0.03796  time: 0.9879  data_time: 0.4471  lr: 0.00025  max_mem: 2945M
[01/12 09:42:22 d2.utils.events]:  eta: 0:04:50  iter: 2679  total_loss: 0.5941  loss_cls: 0.1806  loss_box_reg: 0.3174  loss_mask: 0.00621  loss_rpn_cls: 0.02647  loss_rpn_loc: 0.01309  time: 0.9872  data_time: 0.3628  lr: 0.00025  max_mem: 2945M
[01/12 09:42:40 d2.utils.events]:  eta: 0:04:32  iter: 2699  total_loss: 0.5343  loss_cls: 0.1504  loss_box_reg: 0.2557  loss_mask: 0.006789  loss_rpn_cls: 0.03677  loss_rpn_loc: 0.03865  time: 0.9866  data_time: 0.4021  lr: 0.00025  max_mem: 2945M
[01/12 09:42:59 d2.utils.events]:  eta: 0:04:14  iter: 2719  total_loss: 0.5357  loss_cls: 0.1562  loss_box_reg: 0.2807  loss_mask: 0.008191  loss_rpn_cls: 0.03281  loss_rpn_loc: 0.03311  time: 0.9862  data_time: 0.4153  lr: 0.00025  max_mem: 2945M
[01/12 09:43:17 d2.utils.events]:  eta: 0:03:55  iter: 2739  total_loss: 0.5368  loss_cls: 0.1473  loss_box_reg: 0.3253  loss_mask: 0.006979  loss_rpn_cls: 0.02471  loss_rpn_loc: 0.009394  time: 0.9855  data_time: 0.3866  lr: 0.00025  max_mem: 2945M
[01/12 09:43:35 d2.utils.events]:  eta: 0:03:37  iter: 2759  total_loss: 0.5021  loss_cls: 0.1676  loss_box_reg: 0.2696  loss_mask: 0.00654  loss_rpn_cls: 0.01953  loss_rpn_loc: 0.02476  time: 0.9850  data_time: 0.3947  lr: 0.00025  max_mem: 2945M
[01/12 09:43:53 d2.utils.events]:  eta: 0:03:19  iter: 2779  total_loss: 0.5134  loss_cls: 0.1511  loss_box_reg: 0.2843  loss_mask: 0.005755  loss_rpn_cls: 0.02299  loss_rpn_loc: 0.01122  time: 0.9843  data_time: 0.3814  lr: 0.00025  max_mem: 2945M
[01/12 09:44:12 d2.utils.events]:  eta: 0:03:01  iter: 2799  total_loss: 0.5063  loss_cls: 0.1725  loss_box_reg: 0.2658  loss_mask: 0.007388  loss_rpn_cls: 0.02616  loss_rpn_loc: 0.01914  time: 0.9840  data_time: 0.4351  lr: 0.00025  max_mem: 2945M
[01/12 09:44:31 d2.utils.events]:  eta: 0:02:43  iter: 2819  total_loss: 0.4678  loss_cls: 0.1558  loss_box_reg: 0.2379  loss_mask: 0.008025  loss_rpn_cls: 0.02443  loss_rpn_loc: 0.0127  time: 0.9840  data_time: 0.4553  lr: 0.00025  max_mem: 2945M
[01/12 09:44:50 d2.utils.events]:  eta: 0:02:25  iter: 2839  total_loss: 0.5239  loss_cls: 0.1475  loss_box_reg: 0.2413  loss_mask: 0.005961  loss_rpn_cls: 0.03718  loss_rpn_loc: 0.03723  time: 0.9835  data_time: 0.4011  lr: 0.00025  max_mem: 2945M
[01/12 09:45:09 d2.utils.events]:  eta: 0:02:07  iter: 2859  total_loss: 0.4999  loss_cls: 0.1498  loss_box_reg: 0.258  loss_mask: 0.006025  loss_rpn_cls: 0.02976  loss_rpn_loc: 0.01776  time: 0.9834  data_time: 0.4408  lr: 0.00025  max_mem: 2945M
[01/12 09:45:31 d2.utils.events]:  eta: 0:01:49  iter: 2879  total_loss: 0.5215  loss_cls: 0.1732  loss_box_reg: 0.2615  loss_mask: 0.005839  loss_rpn_cls: 0.02566  loss_rpn_loc: 0.01049  time: 0.9842  data_time: 0.5539  lr: 0.00025  max_mem: 2945M
[01/12 09:45:49 d2.utils.events]:  eta: 0:01:31  iter: 2899  total_loss: 0.5408  loss_cls: 0.1702  loss_box_reg: 0.2833  loss_mask: 0.007459  loss_rpn_cls: 0.02144  loss_rpn_loc: 0.0317  time: 0.9836  data_time: 0.3695  lr: 0.00025  max_mem: 2945M
[01/12 09:46:09 d2.utils.events]:  eta: 0:01:12  iter: 2919  total_loss: 0.5885  loss_cls: 0.1569  loss_box_reg: 0.3018  loss_mask: 0.005885  loss_rpn_cls: 0.02621  loss_rpn_loc: 0.01737  time: 0.9837  data_time: 0.4684  lr: 0.00025  max_mem: 2945M
[01/12 09:46:29 d2.utils.events]:  eta: 0:00:54  iter: 2939  total_loss: 0.5168  loss_cls: 0.1742  loss_box_reg: 0.2452  loss_mask: 0.005413  loss_rpn_cls: 0.02357  loss_rpn_loc: 0.01898  time: 0.9838  data_time: 0.4674  lr: 0.00025  max_mem: 2945M
[01/12 09:46:47 d2.utils.events]:  eta: 0:00:36  iter: 2959  total_loss: 0.5102  loss_cls: 0.1547  loss_box_reg: 0.2024  loss_mask: 0.005243  loss_rpn_cls: 0.03416  loss_rpn_loc: 0.01668  time: 0.9833  data_time: 0.3834  lr: 0.00025  max_mem: 2945M
[01/12 09:47:05 d2.utils.events]:  eta: 0:00:18  iter: 2979  total_loss: 0.6171  loss_cls: 0.172  loss_box_reg: 0.2801  loss_mask: 0.008238  loss_rpn_cls: 0.0341  loss_rpn_loc: 0.02279  time: 0.9827  data_time: 0.3966  lr: 0.00025  max_mem: 2945M
[01/12 09:47:26 d2.utils.events]:  eta: 0:00:00  iter: 2999  total_loss: 0.548  loss_cls: 0.1707  loss_box_reg: 0.2918  loss_mask: 0.006946  loss_rpn_cls: 0.02447  loss_rpn_loc: 0.02325  time: 0.9825  data_time: 0.4335  lr: 0.00025  max_mem: 2945M
[01/12 09:47:26 d2.engine.hooks]: Overall training speed: 2998 iterations in 0:49:05 (0.9825 s / it)
[01/12 09:47:26 d2.engine.hooks]: Total training time: 0:49:10 (0:00:04 on hooks)
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 2
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST: []
  TRAIN:
  - train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 640
  - 672
  - 704
  - 736
  - 768
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
    - - 64
    - - 128
    - - 256
    - - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: true
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: FastRCNNConvFCHead
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 128
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    - p6
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: detectron2://COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.00025
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 210000
  - 250000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0




[01/12 09:47:27 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from ./output/model_final.pth ...
test in utils nums_data 361
WARNING [01/12 09:47:41 d2.evaluation.coco_evaluation]: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
test in utils nums_data 361
[01/12 09:47:42 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[01/12 09:47:42 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[01/12 09:47:42 d2.data.common]: Serializing 361 elements to byte tensors and concatenating them all ...
[01/12 09:47:42 d2.data.common]: Serialized dataset takes 0.40 MiB
[01/12 09:47:42 d2.evaluation.evaluator]: Start inference on 361 batches
[01/12 09:47:48 d2.evaluation.evaluator]: Inference done 11/361. Dataloading: 0.1581 s/iter. Inference: 0.1219 s/iter. Eval: 0.1116 s/iter. Total: 0.3915 s/iter. ETA=0:02:17
[01/12 09:47:53 d2.evaluation.evaluator]: Inference done 21/361. Dataloading: 0.2114 s/iter. Inference: 0.1215 s/iter. Eval: 0.1452 s/iter. Total: 0.4784 s/iter. ETA=0:02:42
[01/12 09:47:59 d2.evaluation.evaluator]: Inference done 31/361. Dataloading: 0.2566 s/iter. Inference: 0.1233 s/iter. Eval: 0.1370 s/iter. Total: 0.5173 s/iter. ETA=0:02:50
[01/12 09:48:04 d2.evaluation.evaluator]: Inference done 44/361. Dataloading: 0.2417 s/iter. Inference: 0.1259 s/iter. Eval: 0.1077 s/iter. Total: 0.4758 s/iter. ETA=0:02:30
[01/12 09:48:09 d2.evaluation.evaluator]: Inference done 52/361. Dataloading: 0.2736 s/iter. Inference: 0.1263 s/iter. Eval: 0.1063 s/iter. Total: 0.5067 s/iter. ETA=0:02:36
[01/12 09:48:14 d2.evaluation.evaluator]: Inference done 63/361. Dataloading: 0.2662 s/iter. Inference: 0.1262 s/iter. Eval: 0.1058 s/iter. Total: 0.4988 s/iter. ETA=0:02:28
[01/12 09:48:19 d2.evaluation.evaluator]: Inference done 77/361. Dataloading: 0.2528 s/iter. Inference: 0.1270 s/iter. Eval: 0.0958 s/iter. Total: 0.4761 s/iter. ETA=0:02:15
[01/12 09:48:25 d2.evaluation.evaluator]: Inference done 89/361. Dataloading: 0.2540 s/iter. Inference: 0.1275 s/iter. Eval: 0.0900 s/iter. Total: 0.4720 s/iter. ETA=0:02:08
[01/12 09:48:30 d2.evaluation.evaluator]: Inference done 101/361. Dataloading: 0.2432 s/iter. Inference: 0.1281 s/iter. Eval: 0.0966 s/iter. Total: 0.4684 s/iter. ETA=0:02:01
[01/12 09:48:36 d2.evaluation.evaluator]: Inference done 113/361. Dataloading: 0.2455 s/iter. Inference: 0.1291 s/iter. Eval: 0.0945 s/iter. Total: 0.4695 s/iter. ETA=0:01:56
[01/12 09:48:41 d2.evaluation.evaluator]: Inference done 122/361. Dataloading: 0.2515 s/iter. Inference: 0.1288 s/iter. Eval: 0.0957 s/iter. Total: 0.4765 s/iter. ETA=0:01:53
[01/12 09:48:47 d2.evaluation.evaluator]: Inference done 133/361. Dataloading: 0.2609 s/iter. Inference: 0.1286 s/iter. Eval: 0.0906 s/iter. Total: 0.4806 s/iter. ETA=0:01:49
[01/12 09:48:52 d2.evaluation.evaluator]: Inference done 145/361. Dataloading: 0.2566 s/iter. Inference: 0.1291 s/iter. Eval: 0.0907 s/iter. Total: 0.4770 s/iter. ETA=0:01:43
[01/12 09:48:57 d2.evaluation.evaluator]: Inference done 155/361. Dataloading: 0.2615 s/iter. Inference: 0.1289 s/iter. Eval: 0.0876 s/iter. Total: 0.4786 s/iter. ETA=0:01:38
[01/12 09:49:02 d2.evaluation.evaluator]: Inference done 166/361. Dataloading: 0.2610 s/iter. Inference: 0.1289 s/iter. Eval: 0.0880 s/iter. Total: 0.4786 s/iter. ETA=0:01:33
[01/12 09:49:08 d2.evaluation.evaluator]: Inference done 178/361. Dataloading: 0.2566 s/iter. Inference: 0.1291 s/iter. Eval: 0.0914 s/iter. Total: 0.4777 s/iter. ETA=0:01:27
[01/12 09:49:13 d2.evaluation.evaluator]: Inference done 192/361. Dataloading: 0.2528 s/iter. Inference: 0.1288 s/iter. Eval: 0.0871 s/iter. Total: 0.4693 s/iter. ETA=0:01:19
[01/12 09:49:18 d2.evaluation.evaluator]: Inference done 203/361. Dataloading: 0.2575 s/iter. Inference: 0.1285 s/iter. Eval: 0.0839 s/iter. Total: 0.4706 s/iter. ETA=0:01:14
[01/12 09:49:24 d2.evaluation.evaluator]: Inference done 214/361. Dataloading: 0.2571 s/iter. Inference: 0.1283 s/iter. Eval: 0.0846 s/iter. Total: 0.4705 s/iter. ETA=0:01:09
[01/12 09:49:29 d2.evaluation.evaluator]: Inference done 222/361. Dataloading: 0.2628 s/iter. Inference: 0.1283 s/iter. Eval: 0.0847 s/iter. Total: 0.4765 s/iter. ETA=0:01:06
[01/12 09:49:34 d2.evaluation.evaluator]: Inference done 235/361. Dataloading: 0.2581 s/iter. Inference: 0.1288 s/iter. Eval: 0.0842 s/iter. Total: 0.4718 s/iter. ETA=0:00:59
[01/12 09:49:39 d2.evaluation.evaluator]: Inference done 244/361. Dataloading: 0.2619 s/iter. Inference: 0.1286 s/iter. Eval: 0.0851 s/iter. Total: 0.4763 s/iter. ETA=0:00:55
[01/12 09:49:44 d2.evaluation.evaluator]: Inference done 257/361. Dataloading: 0.2558 s/iter. Inference: 0.1288 s/iter. Eval: 0.0880 s/iter. Total: 0.4733 s/iter. ETA=0:00:49
[01/12 09:49:50 d2.evaluation.evaluator]: Inference done 268/361. Dataloading: 0.2573 s/iter. Inference: 0.1288 s/iter. Eval: 0.0883 s/iter. Total: 0.4750 s/iter. ETA=0:00:44
[01/12 09:49:56 d2.evaluation.evaluator]: Inference done 280/361. Dataloading: 0.2603 s/iter. Inference: 0.1290 s/iter. Eval: 0.0855 s/iter. Total: 0.4754 s/iter. ETA=0:00:38
[01/12 09:50:01 d2.evaluation.evaluator]: Inference done 291/361. Dataloading: 0.2588 s/iter. Inference: 0.1290 s/iter. Eval: 0.0866 s/iter. Total: 0.4750 s/iter. ETA=0:00:33
[01/12 09:50:06 d2.evaluation.evaluator]: Inference done 303/361. Dataloading: 0.2593 s/iter. Inference: 0.1289 s/iter. Eval: 0.0847 s/iter. Total: 0.4735 s/iter. ETA=0:00:27
[01/12 09:50:12 d2.evaluation.evaluator]: Inference done 313/361. Dataloading: 0.2584 s/iter. Inference: 0.1291 s/iter. Eval: 0.0877 s/iter. Total: 0.4759 s/iter. ETA=0:00:22
[01/12 09:50:17 d2.evaluation.evaluator]: Inference done 324/361. Dataloading: 0.2581 s/iter. Inference: 0.1295 s/iter. Eval: 0.0879 s/iter. Total: 0.4762 s/iter. ETA=0:00:17
[01/12 09:50:23 d2.evaluation.evaluator]: Inference done 329/361. Dataloading: 0.2656 s/iter. Inference: 0.1300 s/iter. Eval: 0.0901 s/iter. Total: 0.4864 s/iter. ETA=0:00:15
[01/12 09:50:29 d2.evaluation.evaluator]: Inference done 341/361. Dataloading: 0.2667 s/iter. Inference: 0.1302 s/iter. Eval: 0.0887 s/iter. Total: 0.4863 s/iter. ETA=0:00:09
[01/12 09:50:34 d2.evaluation.evaluator]: Inference done 350/361. Dataloading: 0.2700 s/iter. Inference: 0.1301 s/iter. Eval: 0.0880 s/iter. Total: 0.4888 s/iter. ETA=0:00:05
[01/12 09:50:38 d2.evaluation.evaluator]: Total inference time: 0:02:52.545266 (0.484678 s / iter per device, on 1 devices)
[01/12 09:50:38 d2.evaluation.evaluator]: Total inference pure compute time: 0:00:46 (0.130001 s / iter per device, on 1 devices)
[01/12 09:50:38 d2.evaluation.coco_evaluation]: Preparing results for COCO format ...
[01/12 09:50:38 d2.evaluation.coco_evaluation]: Saving results to ./output/coco_instances_results.json
[01/12 09:50:38 d2.evaluation.coco_evaluation]: Evaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
[01/12 09:50:38 d2.evaluation.fast_eval_api]: Evaluate annotation type *bbox*
[01/12 09:50:38 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 0.04 seconds.
[01/12 09:50:38 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[01/12 09:50:38 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.01 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
[01/12 09:50:38 d2.evaluation.coco_evaluation]: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.000 | 0.000  | 0.000  |  nan  | 0.000 | 0.000 |
[01/12 09:50:38 d2.evaluation.coco_evaluation]: Some metrics cannot be computed and is shown as NaN.
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
[01/12 09:50:38 d2.evaluation.fast_eval_api]: Evaluate annotation type *segm*
[01/12 09:50:38 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 0.08 seconds.
[01/12 09:50:38 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[01/12 09:50:38 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.00 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
[01/12 09:50:38 d2.evaluation.coco_evaluation]: Evaluation results for segm: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.000 | 0.000  | 0.000  |  nan  | 0.000 | 0.000 |
[01/12 09:50:38 d2.evaluation.coco_evaluation]: Some metrics cannot be computed and is shown as NaN.
OrderedDict([('bbox', {'AP': 0.0, 'AP50': 0.0, 'AP75': 0.0, 'APs': nan, 'APm': 0.0, 'APl': 0.0}), ('segm', {'AP': 0.0, 'AP50': 0.0, 'AP75': 0.0, 'APs': nan, 'APm': 0.0, 'APl': 0.0})])